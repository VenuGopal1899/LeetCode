# Kth Smallest Element in a BST

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root, int count, vector<int> &res, int k){
        if(root!=NULL){
            inorder(root->left, count, res, k);
            res.push_back(root->val);
            count++;
            if(count == k)
                return ;
            inorder(root->right, count, res, k);
        }
    }
    int kthSmallest(TreeNode* root, int k) {
        vector<int> res; 
        int count = 0;
        inorder(root, count, res, k);
        return res[k-1];
        
    }
};