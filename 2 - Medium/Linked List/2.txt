# Odd Even Linked List

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL || head->next == NULL || head->next->next == NULL)
            return head;
        
        ListNode* first = head;
        ListNode* second = head->next;
        while(second!=NULL && second->next!=NULL){
            ListNode* temp = first->next;
            ListNode* temp2 = second->next;
            
            second->next = second->next->next;
            first->next = temp2;
            first->next->next = temp;
            
            first = first->next;
            second = second->next;
        }
        
        return head;
    }
};