# Symmetric Tree

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    bool compare(TreeNode* nodeLeft, TreeNode* nodeRight){
        if(nodeLeft == NULL && nodeRight == NULL)
            return true;
        
        if(nodeLeft!=NULL && nodeRight!=NULL && nodeLeft->val == nodeRight->val){
            if(compare(nodeLeft->left , nodeRight->right) && compare(nodeLeft->right, nodeRight->left))
                return true;
            else
                return false;
        }

        return false;
    }
    
    bool isSymmetric(TreeNode* root) {
        if(root == NULL)
            return true;
        
        if(compare(root->left, root->right))
            return true;
        
        return false;
    }
};