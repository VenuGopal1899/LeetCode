# Two Sum

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> res;
        int n = nums.size();
        unordered_multiset<int> hp;
        for(int i=0; i<n; i++){
            hp.insert(nums[i]);
        }
        
        for(int i=0; i<n; i++){
            int find = target-nums[i];
            if(find != nums[i]){
                if(hp.find(find) == hp.end()){
                continue;
                }
                else{
                    int index = i;
                    res.push_back(index);
                    int first = nums[index];
                    for(int i = index+1; i<n; i++){
                        if(nums[i] == target-first){
                            res.push_back(i);
                            return res;
                        }
                        continue;
                    }
                    break;
                }
            }
            else{
                if(hp.count(find) >= 2){
                    int index = i;
                    int first = nums[index];
                    res.push_back(index);
                    for(int i = index+1; i<n; i++){
                        if(nums[i] == first){
                            res.push_back(i);
                            return res;
                        }
                    }
                }
                else{
                    continue;
                }
            }
        }
        return res;   
    }
};