# Validate Binary Search Tree

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root, vector<int> &arr){
        if(root != NULL){
            inorder(root->left, arr);
            arr.push_back(root->val);
            inorder(root->right, arr);
        }
    }
    
    bool isValidBST(TreeNode* root) {
        vector<int> arr;
        inorder(root, arr);
        
        for(int i=0; i+1<arr.size(); i++){
            if(arr[i] > arr[i+1] || arr[i] == arr[i+1])
                return false;
        }
        
        return true;
    }
};